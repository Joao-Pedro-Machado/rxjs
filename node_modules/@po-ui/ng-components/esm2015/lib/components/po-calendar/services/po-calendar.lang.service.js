import { Injectable } from '@angular/core';
export class PoCalendarLangService {
    constructor() {
        this.language = 'pt';
        this.months = [
            {
                pt: 'Janeiro',
                en: 'January',
                es: 'Enero'
            },
            {
                pt: 'Fevereiro',
                en: 'February',
                es: 'Febrero'
            },
            {
                pt: 'Março',
                en: 'March',
                es: 'Marzo'
            },
            {
                pt: 'Abril',
                en: 'April',
                es: 'Abril'
            },
            {
                pt: 'Maio',
                en: 'May',
                es: 'Mayo'
            },
            {
                pt: 'Junho',
                en: 'June',
                es: 'Junio'
            },
            {
                pt: 'Julho',
                en: 'July',
                es: 'Julio'
            },
            {
                pt: 'Agosto',
                en: 'August',
                es: 'Agosto'
            },
            {
                pt: 'Setembro',
                en: 'September',
                es: 'Setiembre'
            },
            {
                pt: 'Outubro',
                en: 'October',
                es: 'Octubre'
            },
            {
                pt: 'Novembro',
                en: 'November',
                es: 'Noviembre'
            },
            {
                pt: 'Dezembro',
                en: 'December',
                es: 'Diciembre'
            }
        ];
        this.shortWeekDays = [
            {
                pt: 'Dom',
                en: 'Sun',
                es: 'Dom'
            },
            {
                pt: 'Seg',
                en: 'Mon',
                es: 'Lun'
            },
            {
                pt: 'Ter',
                en: 'Tue',
                es: 'Mar'
            },
            {
                pt: 'Qua',
                en: 'Wed',
                es: 'Mié'
            },
            {
                pt: 'Qui',
                en: 'Thu',
                es: 'Jue'
            },
            {
                pt: 'Sex',
                en: 'Fri',
                es: 'Vie'
            },
            {
                pt: 'Sáb',
                en: 'Sat',
                es: 'Sáb'
            }
        ];
        this.monthLabel = {
            pt: 'Mês',
            en: 'Month',
            es: 'Mes'
        };
        this.yearLabel = {
            pt: 'Ano',
            en: 'Year',
            es: 'Año'
        };
    }
    getMonth(month) {
        return this.months[month][this.language];
    }
    getMonthLabel() {
        return this.monthLabel[this.language];
    }
    getMonthsArray() {
        const arrMonths = Array();
        for (let i = 0; i < this.months.length; i++) {
            arrMonths.push(this.months[i][this.language]);
        }
        return arrMonths;
    }
    getWeekDays(day) {
        return this.shortWeekDays[day][this.language];
    }
    getWeekDaysArray() {
        const arrWeekDays = Array();
        for (let i = 0; i < this.shortWeekDays.length; i++) {
            arrWeekDays.push(this.shortWeekDays[i][this.language]);
        }
        return arrWeekDays;
    }
    getYearLabel() {
        return this.yearLabel[this.language];
    }
    setLanguage(language) {
        if (language && language.length >= 2) {
            language = language.toLowerCase().slice(0, 2);
            this.language = language === 'pt' || language === 'en' || language === 'es' ? language : 'pt';
        }
    }
}
PoCalendarLangService.decorators = [
    { type: Injectable }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tY2FsZW5kYXIubGFuZy5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvdWkvc3JjL2xpYi9jb21wb25lbnRzL3BvLWNhbGVuZGFyL3NlcnZpY2VzL3BvLWNhbGVuZGFyLmxhbmcuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRzNDLE1BQU0sT0FBTyxxQkFBcUI7SUFEbEM7UUFFVSxhQUFRLEdBQUcsSUFBSSxDQUFDO1FBRWhCLFdBQU0sR0FBRztZQUNmO2dCQUNFLEVBQUUsRUFBRSxTQUFTO2dCQUNiLEVBQUUsRUFBRSxTQUFTO2dCQUNiLEVBQUUsRUFBRSxPQUFPO2FBQ1o7WUFDRDtnQkFDRSxFQUFFLEVBQUUsV0FBVztnQkFDZixFQUFFLEVBQUUsVUFBVTtnQkFDZCxFQUFFLEVBQUUsU0FBUzthQUNkO1lBQ0Q7Z0JBQ0UsRUFBRSxFQUFFLE9BQU87Z0JBQ1gsRUFBRSxFQUFFLE9BQU87Z0JBQ1gsRUFBRSxFQUFFLE9BQU87YUFDWjtZQUNEO2dCQUNFLEVBQUUsRUFBRSxPQUFPO2dCQUNYLEVBQUUsRUFBRSxPQUFPO2dCQUNYLEVBQUUsRUFBRSxPQUFPO2FBQ1o7WUFDRDtnQkFDRSxFQUFFLEVBQUUsTUFBTTtnQkFDVixFQUFFLEVBQUUsS0FBSztnQkFDVCxFQUFFLEVBQUUsTUFBTTthQUNYO1lBQ0Q7Z0JBQ0UsRUFBRSxFQUFFLE9BQU87Z0JBQ1gsRUFBRSxFQUFFLE1BQU07Z0JBQ1YsRUFBRSxFQUFFLE9BQU87YUFDWjtZQUNEO2dCQUNFLEVBQUUsRUFBRSxPQUFPO2dCQUNYLEVBQUUsRUFBRSxNQUFNO2dCQUNWLEVBQUUsRUFBRSxPQUFPO2FBQ1o7WUFDRDtnQkFDRSxFQUFFLEVBQUUsUUFBUTtnQkFDWixFQUFFLEVBQUUsUUFBUTtnQkFDWixFQUFFLEVBQUUsUUFBUTthQUNiO1lB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Q3hEO1FBQ0QsT0FBTyxXQUFXLENBQUM7SUFDckIsQ0FBQztJQUVELFlBQVk7UUFDVixPQUFPLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ3ZDLENBQUM7SUFFRCxXQUFXLENBQUMsUUFBZ0I7UUFDMUIsSUFBSSxRQUFRLElBQUksUUFBUSxDQUFDLE1BQU0sSUFBSSxDQUFDLEVBQUU7WUFDcEMsUUFBUSxHQUFHLFFBQVEsQ0FBQyxXQUFXLEVBQUUsQ0FBQyxLQUFLLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO1lBQzlDLElBQUksQ0FBQyxRQUFRLEdBQUcsUUFBUSxLQUFLLElBQUksSUFBSSxRQUFRLEtBQUssSUFBSSxJQUFJLFFBQVEsS0FBSyxJQUFJLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDO1NBQy9GO0lBQ0gsQ0FBQzs7O1lBMUpGLFVBQVUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBQb0NhbGVuZGFyTGFuZ1NlcnZpY2Uge1xuICBwcml2YXRlIGxhbmd1YWdlID0gJ3B0JztcblxuICBwcml2YXRlIG1vbnRocyA9IFtcbiAgICB7XG4gICAgICBwdDogJ0phbmVpcm8nLFxuICAgICAgZW46ICdKYW51YXJ5JyxcbiAgICAgIGVzOiAnRW5lcm8nXG4gICAgfSxcbiAgICB7XG4gICAgICBwdDogJ0ZldmVyZWlybycsXG4gICAgICBlbjogJ0ZlYnJ1YXJ5JyxcbiAgICAgIGVzOiAnRmVicmVybydcbiAgICB9LFxuICAgIHtcbiAgICAgIHB0OiAnTWFyw6dvJyxcbiAgICAgIGVuOiAnTWFyY2gnLFxuICAgICAgZXM6ICdNYXJ6bydcbiAgICB9LFxuICAgIHtcbiAgICAgIHB0OiAnQWJyaWwnLFxuICAgICAgZW46ICdBcHJpbCcsXG4gICAgICBlczogJ0FicmlsJ1xuICAgIH0sXG4gICAge1xuICAgICAgcHQ6ICdNYWlvJyxcbiAgICAgIGVuOiAnTWF5JyxcbiAgICAgIGVzOiAnTWF5bydcbiAgICB9LFxuICAgIHtcbiAgICAgIHB0OiAnSnVuaG8nLFxuICAgICAgZW46ICdKdW5lJyxcbiAgICAgIGVzOiAnSnVuaW8nXG4gICAgfSxcbiAgICB7XG4gICAgICBwdDogJ0p1bGhvJyxcbiAgICAgIGVuOiAnSnVseScsXG4gICAgICBlczogJ0p1bGlvJ1xuICAgIH0sXG4gICAge1xuICAgICAgcHQ6ICdBZ29zdG8nLFxuICAgICAgZW46ICdBdWd1c3QnLFxuICAgICAgZXM6ICdBZ29zdG8nXG4gICAgfSxcbiAgICB7XG4gICAgICBwdDogJ1NldGVtYnJvJyxcbiAgICAgIGVuOiAnU2VwdGVtYmVyJyxcbiAgICAgIGVzOiAnU2V0aWVtYnJlJ1xuICAgIH0sXG4gICAge1xuICAgICAgcHQ6ICdPdXR1YnJvJyxcbiAgICAgIGVuOiAnT2N0b2JlcicsXG4gICAgICBlczogJ09jdHVicmUnXG4gICAgfSxcbiAgICB7XG4gICAgICBwdDogJ05vdmVtYnJvJyxcbiAgICAgIGVuOiAnTm92ZW1iZXInLFxuICAgICAgZXM6ICdOb3ZpZW1icmUnXG4gICAgfSxcbiAgICB7XG4gICAgICBwdDogJ0RlemVtYnJvJyxcbiAgICAgIGVuOiAnRGVjZW1iZXInLFxuICAgICAgZXM6ICdEaWNpZW1icmUnXG4gICAgfVxuICBdO1xuXG4gIHByaXZhdGUgc2hvcnRXZWVrRGF5cyA9IFtcbiAgICB7XG4gICAgICBwdDogJ0RvbScsXG4gICAgICBlbjogJ1N1bicsXG4gICAgICBlczogJ0RvbSdcbiAgICB9LFxuICAgIHtcbiAgICAgIHB0OiAnU2VnJyxcbiAgICAgIGVuOiAnTW9uJyxcbiAgICAgIGVzOiAnTHVuJ1xuICAgIH0sXG4gICAge1xuICAgICAgcHQ6ICdUZXInLFxuICAgICAgZW46ICdUdWUnLFxuICAgICAgZXM6ICdNYXInXG4gICAgfSxcbiAgICB7XG4gICAgICBwdDogJ1F1YScsXG4gICAgICBlbjogJ1dlZCcsXG4gICAgICBlczogJ01pw6knXG4gICAgfSxcbiAgICB7XG4gICAgICBwdDogJ1F1aScsXG4gICAgICBlbjogJ1RodScsXG4gICAgICBlczogJ0p1ZSdcbiAgICB9LFxuICAgIHtcbiAgICAgIHB0OiAnU2V4JyxcbiAgICAgIGVuOiAnRnJpJyxcbiAgICAgIGVzOiAnVmllJ1xuICAgIH0sXG4gICAge1xuICAgICAgcHQ6ICdTw6FiJyxcbiAgICAgIGVuOiAnU2F0JyxcbiAgICAgIGVzOiAnU8OhYidcbiAgICB9XG4gIF07XG5cbiAgcHJpdmF0ZSBtb250aExhYmVsID0ge1xuICAgIHB0OiAnTcOqcycsXG4gICAgZW46ICdNb250aCcsXG4gICAgZXM6ICdNZXMnXG4gIH07XG5cbiAgcHJpdmF0ZSB5ZWFyTGFiZWwgPSB7XG4gICAgcHQ6ICdBbm8nLFxuICAgIGVuOiAnWWVhcicsXG4gICAgZXM6ICdBw7FvJ1xuICB9O1xuXG4gIGdldE1vbnRoKG1vbnRoOiBudW1iZXIpIHtcbiAgICByZXR1cm4gdGhpcy5tb250aHNbbW9udGhdW3RoaXMubGFuZ3VhZ2VdO1xuICB9XG5cbiAgZ2V0TW9udGhMYWJlbCgpIHtcbiAgICByZXR1cm4gdGhpcy5tb250aExhYmVsW3RoaXMubGFuZ3VhZ2VdO1xuICB9XG5cbiAgZ2V0TW9udGhzQXJyYXkoKSB7XG4gICAgY29uc3QgYXJyTW9udGhzID0gQXJyYXkoKTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMubW9udGhzLmxlbmd0aDsgaSsrKSB7XG4gICAgICBhcnJNb250aHMucHVzaCh0aGlzLm1vbnRoc1tpXVt0aGlzLmxhbmd1YWdlXSk7XG4gICAgfVxuICAgIHJldHVybiBhcnJNb250aHM7XG4gIH1cblxuICBnZXRXZWVrRGF5cyhkYXk6IG51bWJlcikge1xuICAgIHJldHVybiB0aGlzLnNob3J0V2Vla0RheXNbZGF5XVt0aGlzLmxhbmd1YWdlXTtcbiAgfVxuXG4gIGdldFdlZWtEYXlzQXJyYXkoKSB7XG4gICAgY29uc3QgYXJyV2Vla0RheXMgPSBBcnJheSgpO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5zaG9ydFdlZWtEYXlzLmxlbmd0aDsgaSsrKSB7XG4gICAgICBhcnJXZWVrRGF5cy5wdXNoKHRoaXMuc2hvcnRXZWVrRGF5c1tpXVt0aGlzLmxhbmd1YWdlXSk7XG4gICAgfVxuICAgIHJldHVybiBhcnJXZWVrRGF5cztcbiAgfVxuXG4gIGdldFllYXJMYWJlbCgpIHtcbiAgICByZXR1cm4gdGhpcy55ZWFyTGFiZWxbdGhpcy5sYW5ndWFnZV07XG4gIH1cblxuICBzZXRMYW5ndWFnZShsYW5ndWFnZTogc3RyaW5nKSB7XG4gICAgaWYgKGxhbmd1YWdlICYmIGxhbmd1YWdlLmxlbmd0aCA+PSAyKSB7XG4gICAgICBsYW5ndWFnZSA9IGxhbmd1YWdlLnRvTG93ZXJDYXNlKCkuc2xpY2UoMCwgMik7XG4gICAgICB0aGlzLmxhbmd1YWdlID0gbGFuZ3VhZ2UgPT09ICdwdCcgfHwgbGFuZ3VhZ2UgPT09ICdlbicgfHwgbGFuZ3VhZ2UgPT09ICdlcycgPyBsYW5ndWFnZSA6ICdwdCc7XG4gICAgfVxuICB9XG59XG4iXX0=