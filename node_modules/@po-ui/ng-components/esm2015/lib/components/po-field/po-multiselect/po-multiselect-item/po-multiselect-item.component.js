import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';
/**
 * @docsPrivate
 *
 * @description
 *
 * Componente que constrói cada item no dropdown, contendo o checkbox e o label.
 */
export class PoMultiselectItemComponent {
    constructor() {
        /** Esta propriedade indica se o campo está selecionado ou não. */
        this.selected = false;
        /** Evento que será disparado toda vez que o usuário marcar ou desmarcar um item. */
        this.change = new EventEmitter();
    }
    itemClicked() {
        this.selected = !this.selected;
        this.change.emit(this.selected);
    }
}
PoMultiselectItemComponent.decorators = [
    { type: Component, args: [{
                selector: 'po-multiselect-item',
                template: "<li [class.po-multiselect-item-selected]=\"selected\" (click)=\"itemClicked()\">\n  <a class=\"po-multiselect-item\">\n    <input\n      [checked]=\"selected\"\n      class=\"po-multiselect-checkbox-input\"\n      [class.po-multiselect-checkbox-input-checked]=\"selected\"\n      type=\"checkbox\"\n    />\n\n    <label class=\"po-multiselect-checkbox-label po-clickable\">\n      {{ label }}\n    </label>\n  </a>\n</li>\n",
                changeDetection: ChangeDetectionStrategy.OnPush
            },] }
];
PoMultiselectItemComponent.propDecorators = {
    label: [{ type: Input, args: ['p-label',] }],
    selected: [{ type: Input, args: ['p-selected',] }],
    change: [{ type: Output, args: ['p-change',] }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tbXVsdGlzZWxlY3QtaXRlbS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy91aS9zcmMvbGliL2NvbXBvbmVudHMvcG8tZmllbGQvcG8tbXVsdGlzZWxlY3QvcG8tbXVsdGlzZWxlY3QtaXRlbS9wby1tdWx0aXNlbGVjdC1pdGVtLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsU0FBUyxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRWhHOzs7Ozs7R0FNRztBQU1ILE1BQU0sT0FBTywwQkFBMEI7SUFMdkM7UUFTRSxrRUFBa0U7UUFDN0MsYUFBUSxHQUFhLEtBQUssQ0FBQztRQUVoRCxvRkFBb0Y7UUFDaEUsV0FBTSxHQUFHLElBQUksWUFBWSxFQUFFLENBQUM7SUFNbEQsQ0FBQztJQUpDLFdBQVc7UUFDVCxJQUFJLENBQUMsUUFBUSxHQUFHLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQztRQUMvQixJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDbEMsQ0FBQzs7O1lBbEJGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUscUJBQXFCO2dCQUMvQixtYkFBbUQ7Z0JBQ25ELGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNO2FBQ2hEOzs7b0JBR0UsS0FBSyxTQUFDLFNBQVM7dUJBR2YsS0FBSyxTQUFDLFlBQVk7cUJBR2xCLE1BQU0sU0FBQyxVQUFVIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIENvbXBvbmVudCwgRXZlbnRFbWl0dGVyLCBJbnB1dCwgT3V0cHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbi8qKlxuICogQGRvY3NQcml2YXRlXG4gKlxuICogQGRlc2NyaXB0aW9uXG4gKlxuICogQ29tcG9uZW50ZSBxdWUgY29uc3Ryw7NpIGNhZGEgaXRlbSBubyBkcm9wZG93biwgY29udGVuZG8gbyBjaGVja2JveCBlIG8gbGFiZWwuXG4gKi9cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3BvLW11bHRpc2VsZWN0LWl0ZW0nLFxuICB0ZW1wbGF0ZVVybDogJy4vcG8tbXVsdGlzZWxlY3QtaXRlbS5jb21wb25lbnQuaHRtbCcsXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoXG59KVxuZXhwb3J0IGNsYXNzIFBvTXVsdGlzZWxlY3RJdGVtQ29tcG9uZW50IHtcbiAgLyoqIFLDs3R1bG8gZG8gaXRlbS4gKi9cbiAgQElucHV0KCdwLWxhYmVsJykgbGFiZWw6IHN0cmluZztcblxuICAvKiogRXN0YSBwcm9wcmllZGFkZSBpbmRpY2Egc2UgbyBjYW1wbyBlc3TDoSBzZWxlY2lvbmFkbyBvdSBuw6NvLiAqL1xuICBASW5wdXQoJ3Atc2VsZWN0ZWQnKSBzZWxlY3RlZD86IGJvb2xlYW4gPSBmYWxzZTtcblxuICAvKiogRXZlbnRvIHF1ZSBzZXLDoSBkaXNwYXJhZG8gdG9kYSB2ZXogcXVlIG8gdXN1w6FyaW8gbWFyY2FyIG91IGRlc21hcmNhciB1bSBpdGVtLiAqL1xuICBAT3V0cHV0KCdwLWNoYW5nZScpIGNoYW5nZSA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcblxuICBpdGVtQ2xpY2tlZCgpIHtcbiAgICB0aGlzLnNlbGVjdGVkID0gIXRoaXMuc2VsZWN0ZWQ7XG4gICAgdGhpcy5jaGFuZ2UuZW1pdCh0aGlzLnNlbGVjdGVkKTtcbiAgfVxufVxuIl19