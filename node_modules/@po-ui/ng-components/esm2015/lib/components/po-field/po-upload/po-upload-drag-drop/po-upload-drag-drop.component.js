import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, Input, Output, ViewChild } from '@angular/core';
import { convertToInt } from '../../../../utils/util';
import { PoUploadDragDropAreaComponent } from './po-upload-drag-drop-area/po-upload-drag-drop-area.component';
const PoUploadDragDropHeightDefault = 320;
const PoUploadDragDropHeightMin = 160;
export class PoUploadDragDropComponent {
    constructor(changeDetector) {
        this.changeDetector = changeDetector;
        this._dragDropHeight = PoUploadDragDropHeightDefault;
        this.isDragOver = false;
        this.fileChange = new EventEmitter();
        this.selectFiles = new EventEmitter();
    }
    set dragDropHeight(value) {
        const dragDropHeight = convertToInt(value, PoUploadDragDropHeightDefault);
        this._dragDropHeight = dragDropHeight < PoUploadDragDropHeightMin ? PoUploadDragDropHeightMin : dragDropHeight;
    }
    get dragDropHeight() {
        return this._dragDropHeight;
    }
    focus() {
        this.dragDropAreaComponent.focus();
    }
    onAreaElement(element) {
        this.areaElement = element;
        // necessário para não ocorrer o erro HasBeenChecked
        this.changeDetector.detectChanges();
    }
    onDragLeave() {
        this.isDragOver = false;
    }
    onDragOver() {
        this.isDragOver = true;
    }
    onFileChange(files) {
        this.isDragOver = false;
        this.fileChange.emit(files);
    }
}
PoUploadDragDropComponent.decorators = [
    { type: Component, args: [{
                selector: 'po-upload-drag-drop',
                template: "<po-upload-drag-drop-area-overlay\n  #dragDropOverlay\n  *ngIf=\"isDragOver\"\n  [p-directory-compatible]=\"directoryCompatible\"\n  [p-disabled]=\"disabled\"\n  [p-literals]=\"literals\"\n  [p-target]=\"dragDropAreaComponent.elementRef\"\n  (p-area-element)=\"onAreaElement($event)\"\n>\n</po-upload-drag-drop-area-overlay>\n\n<po-upload-drag-drop-area\n  p-upload-drag-drop\n  [p-area-element]=\"areaElement\"\n  [p-directory-compatible]=\"directoryCompatible\"\n  [p-disabled]=\"disabled\"\n  [p-height]=\"dragDropHeight\"\n  [p-literals]=\"literals\"\n  [p-overlay]=\"false\"\n  (p-drag-leave)=\"onDragLeave()\"\n  (p-drag-over)=\"onDragOver()\"\n  (p-file-change)=\"onFileChange($event)\"\n  (p-select-files)=\"selectFiles.emit()\"\n>\n</po-upload-drag-drop-area>\n",
                changeDetection: ChangeDetectionStrategy.OnPush
            },] }
];
PoUploadDragDropComponent.ctorParameters = () => [
    { type: ChangeDetectorRef }
];
PoUploadDragDropComponent.propDecorators = {
    dragDropOverlayElement: [{ type: ViewChild, args: ['dragDropOverlay', { read: ElementRef },] }],
    dragDropAreaComponent: [{ type: ViewChild, args: [PoUploadDragDropAreaComponent, { static: true },] }],
    directoryCompatible: [{ type: Input, args: ['p-directory-compatible',] }],
    disabled: [{ type: Input, args: ['p-disabled',] }],
    dragDropHeight: [{ type: Input, args: ['p-drag-drop-height',] }],
    literals: [{ type: Input, args: ['p-literals',] }],
    fileChange: [{ type: Output, args: ['p-file-change',] }],
    selectFiles: [{ type: Output, args: ['p-select-files',] }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tdXBsb2FkLWRyYWctZHJvcC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy91aS9zcmMvbGliL2NvbXBvbmVudHMvcG8tZmllbGQvcG8tdXBsb2FkL3BvLXVwbG9hZC1kcmFnLWRyb3AvcG8tdXBsb2FkLWRyYWctZHJvcC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUNMLHVCQUF1QixFQUN2QixpQkFBaUIsRUFDakIsU0FBUyxFQUNULFVBQVUsRUFDVixZQUFZLEVBQ1osS0FBSyxFQUNMLE1BQU0sRUFDTixTQUFTLEVBQ1YsTUFBTSxlQUFlLENBQUM7QUFFdkIsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBRXRELE9BQU8sRUFBRSw2QkFBNkIsRUFBRSxNQUFNLCtEQUErRCxDQUFDO0FBRzlHLE1BQU0sNkJBQTZCLEdBQUcsR0FBRyxDQUFDO0FBQzFDLE1BQU0seUJBQXlCLEdBQUcsR0FBRyxDQUFDO0FBT3RDLE1BQU0sT0FBTyx5QkFBeUI7SUE2QnBDLFlBQW9CLGNBQWlDO1FBQWpDLG1CQUFjLEdBQWQsY0FBYyxDQUFtQjtRQTVCN0Msb0JBQWUsR0FBWSw2QkFBNkIsQ0FBQztRQUdqRSxlQUFVLEdBQVksS0FBSyxDQUFDO1FBcUJILGVBQVUsR0FBc0IsSUFBSSxZQUFZLEVBQU8sQ0FBQztRQUV2RCxnQkFBVyxHQUFzQixJQUFJLFlBQVksRUFBTyxDQUFDO0lBRTNCLENBQUM7SUFoQnpELElBQWlDLGNBQWMsQ0FBQyxLQUFhO1FBQzNELE1BQU0sY0FBYyxHQUFHLFlBQVksQ0FBQyxLQUFLLEVBQUUsNkJBQTZCLENBQUMsQ0FBQztRQUUxRSxJQUFJLENBQUMsZUFBZSxHQUFHLGNBQWMsR0FBRyx5QkFBeUIsQ0FBQyxDQUFDLENBQUMseUJBQXlCLENBQUMsQ0FBQyxDQUFDLGNBQWMsQ0FBQztJQUNqSCxDQUFDO0lBRUQsSUFBSSxjQUFjO1FBQ2hCLE9BQU8sSUFBSSxDQUFDLGVBQWUsQ0FBQztJQUM5QixDQUFDO0lBVUQsS0FBSztRQUNILElBQUksQ0FBQyxxQkFBcUIsQ0FBQyxLQUFLLEVBQUUsQ0FBQztJQUNyQyxDQUFDO0lBRUQsYUFBYSxDQUFDLE9BQW9CO1FBQ2hDLElBQUksQ0FBQyxXQUFXLEdBQUcsT0FBTyxDQUFDO1FBRTNCLG9EQUFvRDtRQUNwRCxJQUFJLENBQUMsY0FBYyxDQUFDLGFBQWEsRUFBRSxDQUFDO0lBQ3RDLENBQUM7SUFFRCxXQUFXO1FBQ1QsSUFBSSxDQUFDLFVBQVUsR0FBRyxLQUFLLENBQUM7SUFDMUIsQ0FBQztJQUVELFVBQVU7UUFDUixJQUFJLENBQUMsVUFBVSxHQUFHLElBQUksQ0FBQztJQUN6QixDQUFDO0lBRUQsWUFBWSxDQUFDLEtBQUs7UUFDaEIsSUFBSSxDQUFDLFVBQVUsR0FBRyxLQUFLLENBQUM7UUFFeEIsSUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDOUIsQ0FBQzs7O1lBM0RGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUscUJBQXFCO2dCQUMvQiw4d0JBQW1EO2dCQUNuRCxlQUFlLEVBQUUsdUJBQXVCLENBQUMsTUFBTTthQUNoRDs7O1lBckJDLGlCQUFpQjs7O3FDQTRCaEIsU0FBUyxTQUFDLGlCQUFpQixFQUFFLEVBQUUsSUFBSSxFQUFFLFVBQVUsRUFBRTtvQ0FDakQsU0FBUyxTQUFDLDZCQUE2QixFQUFFLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBRTtrQ0FFekQsS0FBSyxTQUFDLHdCQUF3Qjt1QkFFOUIsS0FBSyxTQUFDLFlBQVk7NkJBRWxCLEtBQUssU0FBQyxvQkFBb0I7dUJBVTFCLEtBQUssU0FBQyxZQUFZO3lCQUVsQixNQUFNLFNBQUMsZUFBZTswQkFFdEIsTUFBTSxTQUFDLGdCQUFnQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIENoYW5nZURldGVjdGlvblN0cmF0ZWd5LFxuICBDaGFuZ2VEZXRlY3RvclJlZixcbiAgQ29tcG9uZW50LFxuICBFbGVtZW50UmVmLFxuICBFdmVudEVtaXR0ZXIsXG4gIElucHV0LFxuICBPdXRwdXQsXG4gIFZpZXdDaGlsZFxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgY29udmVydFRvSW50IH0gZnJvbSAnLi4vLi4vLi4vLi4vdXRpbHMvdXRpbCc7XG5cbmltcG9ydCB7IFBvVXBsb2FkRHJhZ0Ryb3BBcmVhQ29tcG9uZW50IH0gZnJvbSAnLi9wby11cGxvYWQtZHJhZy1kcm9wLWFyZWEvcG8tdXBsb2FkLWRyYWctZHJvcC1hcmVhLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBQb1VwbG9hZExpdGVyYWxzIH0gZnJvbSAnLi4vaW50ZXJmYWNlcy9wby11cGxvYWQtbGl0ZXJhbHMuaW50ZXJmYWNlJztcblxuY29uc3QgUG9VcGxvYWREcmFnRHJvcEhlaWdodERlZmF1bHQgPSAzMjA7XG5jb25zdCBQb1VwbG9hZERyYWdEcm9wSGVpZ2h0TWluID0gMTYwO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdwby11cGxvYWQtZHJhZy1kcm9wJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3BvLXVwbG9hZC1kcmFnLWRyb3AuY29tcG9uZW50Lmh0bWwnLFxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaFxufSlcbmV4cG9ydCBjbGFzcyBQb1VwbG9hZERyYWdEcm9wQ29tcG9uZW50IHtcbiAgcHJpdmF0ZSBfZHJhZ0Ryb3BIZWlnaHQ/OiBudW1iZXIgPSBQb1VwbG9hZERyYWdEcm9wSGVpZ2h0RGVmYXVsdDtcblxuICBhcmVhRWxlbWVudDogSFRNTEVsZW1lbnQ7XG4gIGlzRHJhZ092ZXI6IGJvb2xlYW4gPSBmYWxzZTtcblxuICBAVmlld0NoaWxkKCdkcmFnRHJvcE92ZXJsYXknLCB7IHJlYWQ6IEVsZW1lbnRSZWYgfSkgZHJhZ0Ryb3BPdmVybGF5RWxlbWVudDogRWxlbWVudFJlZjtcbiAgQFZpZXdDaGlsZChQb1VwbG9hZERyYWdEcm9wQXJlYUNvbXBvbmVudCwgeyBzdGF0aWM6IHRydWUgfSkgZHJhZ0Ryb3BBcmVhQ29tcG9uZW50OiBQb1VwbG9hZERyYWdEcm9wQXJlYUNvbXBvbmVudDtcblxuICBASW5wdXQoJ3AtZGlyZWN0b3J5LWNvbXBhdGlibGUnKSBkaXJlY3RvcnlDb21wYXRpYmxlOiBib29sZWFuO1xuXG4gIEBJbnB1dCgncC1kaXNhYmxlZCcpIGRpc2FibGVkOiBib29sZWFuO1xuXG4gIEBJbnB1dCgncC1kcmFnLWRyb3AtaGVpZ2h0Jykgc2V0IGRyYWdEcm9wSGVpZ2h0KHZhbHVlOiBudW1iZXIpIHtcbiAgICBjb25zdCBkcmFnRHJvcEhlaWdodCA9IGNvbnZlcnRUb0ludCh2YWx1ZSwgUG9VcGxvYWREcmFnRHJvcEhlaWdodERlZmF1bHQpO1xuXG4gICAgdGhpcy5fZHJhZ0Ryb3BIZWlnaHQgPSBkcmFnRHJvcEhlaWdodCA8IFBvVXBsb2FkRHJhZ0Ryb3BIZWlnaHRNaW4gPyBQb1VwbG9hZERyYWdEcm9wSGVpZ2h0TWluIDogZHJhZ0Ryb3BIZWlnaHQ7XG4gIH1cblxuICBnZXQgZHJhZ0Ryb3BIZWlnaHQoKSB7XG4gICAgcmV0dXJuIHRoaXMuX2RyYWdEcm9wSGVpZ2h0O1xuICB9XG5cbiAgQElucHV0KCdwLWxpdGVyYWxzJykgbGl0ZXJhbHM6IFBvVXBsb2FkTGl0ZXJhbHM7XG5cbiAgQE91dHB1dCgncC1maWxlLWNoYW5nZScpIGZpbGVDaGFuZ2U6IEV2ZW50RW1pdHRlcjxhbnk+ID0gbmV3IEV2ZW50RW1pdHRlcjxhbnk+KCk7XG5cbiAgQE91dHB1dCgncC1zZWxlY3QtZmlsZXMnKSBzZWxlY3RGaWxlczogRXZlbnRFbWl0dGVyPGFueT4gPSBuZXcgRXZlbnRFbWl0dGVyPGFueT4oKTtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGNoYW5nZURldGVjdG9yOiBDaGFuZ2VEZXRlY3RvclJlZikge31cblxuICBmb2N1cygpIHtcbiAgICB0aGlzLmRyYWdEcm9wQXJlYUNvbXBvbmVudC5mb2N1cygpO1xuICB9XG5cbiAgb25BcmVhRWxlbWVudChlbGVtZW50OiBIVE1MRWxlbWVudCkge1xuICAgIHRoaXMuYXJlYUVsZW1lbnQgPSBlbGVtZW50O1xuXG4gICAgLy8gbmVjZXNzw6FyaW8gcGFyYSBuw6NvIG9jb3JyZXIgbyBlcnJvIEhhc0JlZW5DaGVja2VkXG4gICAgdGhpcy5jaGFuZ2VEZXRlY3Rvci5kZXRlY3RDaGFuZ2VzKCk7XG4gIH1cblxuICBvbkRyYWdMZWF2ZSgpIHtcbiAgICB0aGlzLmlzRHJhZ092ZXIgPSBmYWxzZTtcbiAgfVxuXG4gIG9uRHJhZ092ZXIoKSB7XG4gICAgdGhpcy5pc0RyYWdPdmVyID0gdHJ1ZTtcbiAgfVxuXG4gIG9uRmlsZUNoYW5nZShmaWxlcykge1xuICAgIHRoaXMuaXNEcmFnT3ZlciA9IGZhbHNlO1xuXG4gICAgdGhpcy5maWxlQ2hhbmdlLmVtaXQoZmlsZXMpO1xuICB9XG59XG4iXX0=