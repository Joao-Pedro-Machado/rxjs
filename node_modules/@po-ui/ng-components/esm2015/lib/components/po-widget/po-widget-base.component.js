import { Input, Output, EventEmitter, Directive } from '@angular/core';
import { convertToBoolean, isTypeof } from '../../utils/util';
/**
 *
 * @description
 *
 * O componente `po-widget` é recomendado para exibição de *dashboards*, podendo ser utilizado
 * para incluir vários tipos de conteúdo como: gráficos, tabelas, grids e imagens.
 *
 * Além da exibição de conteúdos, este componente possibilita adicionar ações e um link
 * para ajuda, como também possibilita ser utilizado com ou sem sombra.
 *
 * Para controlar sua largura, é possível utilizar o [Grid System](/guides/grid-system) para um maior
 * controle de seu redimensionamento, assim possibilitando o tratamento para diferentes resoluções.
 */
export class PoWidgetBaseComponent {
    constructor() {
        this._disabled = false;
        this._noShadow = false;
        this._primary = false;
        this.containerHeight = 'auto';
        /** Ação que será executada quando o usuário clicar sobre a área total do `po-widget`. */
        this.click = new EventEmitter();
        /** Função que será disparada com o valor do `p-disabled` quando esta propriedade for alterada. */
        this.onDisabled = new EventEmitter();
        /** Função que será chamada na primeira ação. */
        this.primaryAction = new EventEmitter();
        /** Função que será chamada na segunda ação. */
        this.secondaryAction = new EventEmitter();
        /** Função chamada ao clicar no ícone de configuração */
        this.setting = new EventEmitter();
        /** Função que será chamada ao clicar no título. */
        this.titleAction = new EventEmitter();
    }
    /**
     * @optional
     *
     * @description
     *
     * Aplicação de imagem de fundo.
     * > Se a imagem escolhida intervir na legibilidade do texto contido no `p-widget`,
     * pode-se utilizar a propriedade `p-primary` em conjunto para que os textos fiquem na cor branca.
     *
     */
    set background(value) {
        this._background = value && typeof value === 'string' ? value : undefined;
    }
    get background() {
        return this._background;
    }
    /**
     * @optional
     *
     * @description
     *
     * Desabilita todas as ações do componente.
     *
     * @default `false`
     */
    set disabled(value) {
        this._disabled = convertToBoolean(value);
        this.onDisabled.emit(this.disabled);
    }
    get disabled() {
        return this._disabled;
    }
    /**
     * @optional
     *
     * @description
     *
     * Define a altura do `po-widget`.
     * A altura mínima para o `po-widget` depende do que será exibido através das propriedades `p-primary-label`,
     * `p-setting`, `p-help` e `p-title`.
     * > Caso não seja informado valor, a propriedade irá assumir o tamanho do conteúdo.
     */
    set height(value) {
        this._height = parseInt(value, 10);
        this.setHeight(this.height);
    }
    get height() {
        return this._height;
    }
    /**
     * @optional
     *
     * @description
     *
     * Link de ajuda
     */
    set help(value) {
        this._help = isTypeof(value, 'string') ? value : '';
        this.setHeight(this.height);
    }
    get help() {
        return this._help;
    }
    /**
     * @optional
     *
     * @description
     *
     * Desabilita a sombra do `po-widget`.
     *
     * @default `true`
     */
    set noShadow(value) {
        this._noShadow = value === '' ? true : convertToBoolean(value);
        this.setHeight(this.height);
    }
    get noShadow() {
        return this._noShadow;
    }
    /**
     * @optional
     *
     * @description
     *
     * Opção para que o `po-widget` fique em destaque.
     *
     * @default `false`
     */
    set primary(value) {
        this._primary = value === '' ? true : convertToBoolean(value);
    }
    get primary() {
        return this._primary;
    }
    /**
     * @optional
     *
     * @description
     *
     * Descrição da primeira ação.
     *
     * @default `false`
     */
    set primaryLabel(value) {
        this._primaryLabel = isTypeof(value, 'string') ? value : '';
        this.setHeight(this.height);
    }
    get primaryLabel() {
        return this._primaryLabel;
    }
    /**
     * @optional
     *
     * @description
     *
     * Título do `po-widget`.
     *
     * @default `false`
     */
    set title(value) {
        this._title = isTypeof(value, 'string') ? value : '';
        this.setHeight(this.height);
    }
    get title() {
        return this._title;
    }
}
PoWidgetBaseComponent.decorators = [
    { type: Directive }
];
PoWidgetBaseComponent.propDecorators = {
    background: [{ type: Input, args: ['p-background',] }],
    disabled: [{ type: Input, args: ['p-disabled',] }],
    height: [{ type: Input, args: ['p-height',] }],
    help: [{ type: Input, args: ['p-help',] }],
    noShadow: [{ type: Input, args: ['p-no-shadow',] }],
    primary: [{ type: Input, args: ['p-primary',] }],
    primaryLabel: [{ type: Input, args: ['p-primary-label',] }],
    secondaryLabel: [{ type: Input, args: ['p-secondary-label',] }],
    title: [{ type: Input, args: ['p-title',] }],
    click: [{ type: Output, args: ['p-click',] }],
    onDisabled: [{ type: Output, args: ['p-on-disabled',] }],
    primaryAction: [{ type: Output, args: ['p-primary-action',] }],
    secondaryAction: [{ type: Output, args: ['p-secondary-action',] }],
    setting: [{ type: Output, args: ['p-setting',] }],
    titleAction: [{ type: Output, args: ['p-title-action',] }]
};
//# sourceMappingURL=data:application/json;base64,