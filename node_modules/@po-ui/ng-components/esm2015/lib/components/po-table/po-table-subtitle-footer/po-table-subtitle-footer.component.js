import { Component, ElementRef, Input, Renderer2 } from '@angular/core';
/**
 * @docsPrivate
 *
 * @description
 *
 * Componente para a criação de um conjunto de legendas.
 */
export class PoTableSubtitleFooterComponent {
    constructor(element, renderer) {
        this.element = element;
        this.renderer = renderer;
    }
    ngAfterViewInit() {
        this.initializeResizeListener();
        this.debounceResize();
    }
    ngDoCheck() {
        if (!this.isVisible && this.getContainerSize() > 0) {
            this.toggleShowCompleteSubtitle();
            this.isVisible = true;
        }
    }
    ngOnDestroy() {
        this.removeResizeListener();
    }
    debounceResize() {
        clearTimeout(this.timeoutResize);
        this.timeoutResize = setTimeout(() => {
            this.toggleShowCompleteSubtitle();
        });
    }
    getContainerSize() {
        return this.element.nativeElement.querySelector('.po-table-subtitle-footer-container').offsetWidth;
    }
    getItemsSize() {
        const items = this.element.nativeElement.querySelectorAll('.po-table-subtitle-footer');
        return Array.from(items)
            .map(item => item['offsetWidth'])
            .reduce((a, b) => a + b, 16);
    }
    initializeResizeListener() {
        this.resizeListener = this.renderer.listen('window', 'resize', (event) => {
            this.debounceResize();
        });
    }
    removeResizeListener() {
        this.resizeListener();
    }
    toggleShowCompleteSubtitle() {
        const containerSize = this.getContainerSize();
        const itemsSize = this.getItemsSize();
        this.showSubtitle = itemsSize > containerSize;
    }
}
PoTableSubtitleFooterComponent.decorators = [
    { type: Component, args: [{
                selector: 'po-table-subtitle-footer',
                template: "<div class=\"po-table-subtitle-footer-container\">\n  <div *ngFor=\"let subtitle of subtitles\" class=\"po-table-subtitle-footer\">\n    <po-table-subtitle-circle p-hide-title=\"true\" [p-subtitle]=\"subtitle\"> </po-table-subtitle-circle>\n    <span class=\"po-table-subtitle-text\">{{ subtitle.label }}</span>\n  </div>\n  <po-table-show-subtitle *ngIf=\"showSubtitle\" [p-literals]=\"literals\" [p-subtitles]=\"subtitles\">\n  </po-table-show-subtitle>\n</div>\n"
            },] }
];
PoTableSubtitleFooterComponent.ctorParameters = () => [
    { type: ElementRef },
    { type: Renderer2 }
];
PoTableSubtitleFooterComponent.propDecorators = {
    literals: [{ type: Input, args: ['p-literals',] }],
    subtitles: [{ type: Input, args: ['p-subtitles',] }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tdGFibGUtc3VidGl0bGUtZm9vdGVyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3VpL3NyYy9saWIvY29tcG9uZW50cy9wby10YWJsZS9wby10YWJsZS1zdWJ0aXRsZS1mb290ZXIvcG8tdGFibGUtc3VidGl0bGUtZm9vdGVyLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQWlCLFNBQVMsRUFBVyxVQUFVLEVBQUUsS0FBSyxFQUFhLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUkzRzs7Ozs7O0dBTUc7QUFLSCxNQUFNLE9BQU8sOEJBQThCO0lBYXpDLFlBQW9CLE9BQW1CLEVBQVMsUUFBbUI7UUFBL0MsWUFBTyxHQUFQLE9BQU8sQ0FBWTtRQUFTLGFBQVEsR0FBUixRQUFRLENBQVc7SUFBRyxDQUFDO0lBRXZFLGVBQWU7UUFDYixJQUFJLENBQUMsd0JBQXdCLEVBQUUsQ0FBQztRQUNoQyxJQUFJLENBQUMsY0FBYyxFQUFFLENBQUM7SUFDeEIsQ0FBQztJQUVELFNBQVM7UUFDUCxJQUFJLENBQUMsSUFBSSxDQUFDLFNBQVMsSUFBSSxJQUFJLENBQUMsZ0JBQWdCLEVBQUUsR0FBRyxDQUFDLEVBQUU7WUFDbEQsSUFBSSxDQUFDLDBCQUEwQixFQUFFLENBQUM7WUFDbEMsSUFBSSxDQUFDLFNBQVMsR0FBRyxJQUFJLENBQUM7U0FDdkI7SUFDSCxDQUFDO0lBRUQsV0FBVztRQUNULElBQUksQ0FBQyxvQkFBb0IsRUFBRSxDQUFDO0lBQzlCLENBQUM7SUFFTyxjQUFjO1FBQ3BCLFlBQVksQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLENBQUM7UUFDakMsSUFBSSxDQUFDLGFBQWEsR0FBRyxVQUFVLENBQUMsR0FBRyxFQUFFO1lBQ25DLElBQUksQ0FBQywwQkFBMEIsRUFBRSxDQUFDO1FBQ3BDLENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztJQUVPLGdCQUFnQjtRQUN0QixPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsYUFBYSxDQUFDLGFBQWEsQ0FBQyxxQ0FBcUMsQ0FBQyxDQUFDLFdBQVcsQ0FBQztJQUNyRyxDQUFDO0lBRU8sWUFBWTtRQUNsQixNQUFNLEtBQUssR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLGFBQWEsQ0FBQyxnQkFBZ0IsQ0FBQywyQkFBMkIsQ0FBQyxDQUFDO1FBRXZGLE9BQU8sS0FBSyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUM7YUFDckIsR0FBRyxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxDQUFDO2FBQ2hDLE1BQU0sQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsR0FBRyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUM7SUFDakMsQ0FBQztJQUVPLHdCQUF3QjtRQUM5QixJQUFJLENBQUMsY0FBYyxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLFFBQVEsRUFBRSxRQUFRLEVBQUUsQ0FBQyxLQUFpQixFQUFFLEVBQUU7WUFDbkYsSUFBSSxDQUFDLGNBQWMsRUFBRSxDQUFDO1FBQ3hCLENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztJQUVPLG9CQUFvQjtRQUMxQixJQUFJLENBQUMsY0FBYyxFQUFFLENBQUM7SUFDeEIsQ0FBQztJQUVPLDBCQUEwQjtRQUNoQyxNQUFNLGFBQWEsR0FBRyxJQUFJLENBQUMsZ0JBQWdCLEVBQUUsQ0FBQztRQUM5QyxNQUFNLFNBQVMsR0FBRyxJQUFJLENBQUMsWUFBWSxFQUFFLENBQUM7UUFFdEMsSUFBSSxDQUFDLFlBQVksR0FBRyxTQUFTLEdBQUcsYUFBYSxDQUFDO0lBQ2hELENBQUM7OztZQXJFRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLDBCQUEwQjtnQkFDcEMsNmRBQXdEO2FBQ3pEOzs7WUFkMkMsVUFBVTtZQUFvQixTQUFTOzs7dUJBdUJoRixLQUFLLFNBQUMsWUFBWTt3QkFHbEIsS0FBSyxTQUFDLGFBQWEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBZnRlclZpZXdJbml0LCBDb21wb25lbnQsIERvQ2hlY2ssIEVsZW1lbnRSZWYsIElucHV0LCBPbkRlc3Ryb3ksIFJlbmRlcmVyMiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBQb1RhYmxlU3VidGl0bGVDb2x1bW4gfSBmcm9tICcuL3BvLXRhYmxlLXN1YnRpdGxlLWNvbHVtbi5pbnRlcmZhY2UnO1xuXG4vKipcbiAqIEBkb2NzUHJpdmF0ZVxuICpcbiAqIEBkZXNjcmlwdGlvblxuICpcbiAqIENvbXBvbmVudGUgcGFyYSBhIGNyaWHDp8OjbyBkZSB1bSBjb25qdW50byBkZSBsZWdlbmRhcy5cbiAqL1xuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAncG8tdGFibGUtc3VidGl0bGUtZm9vdGVyJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3BvLXRhYmxlLXN1YnRpdGxlLWZvb3Rlci5jb21wb25lbnQuaHRtbCdcbn0pXG5leHBvcnQgY2xhc3MgUG9UYWJsZVN1YnRpdGxlRm9vdGVyQ29tcG9uZW50IGltcGxlbWVudHMgQWZ0ZXJWaWV3SW5pdCwgRG9DaGVjaywgT25EZXN0cm95IHtcbiAgc2hvd1N1YnRpdGxlOiBib29sZWFuO1xuXG4gIHByaXZhdGUgaXNWaXNpYmxlOiBib29sZWFuO1xuICBwcml2YXRlIHRpbWVvdXRSZXNpemU7XG4gIHByb3RlY3RlZCByZXNpemVMaXN0ZW5lcjogKCkgPT4gdm9pZDtcblxuICAvKiogUHJvcHJpZWRhZGUgcXVlIHJlY2ViZSBhcyBsaXRlcmFpcyBkZWZpbmlkYXMgbm8gYHBvLXRhYmxlYC4gKi9cbiAgQElucHV0KCdwLWxpdGVyYWxzJykgbGl0ZXJhbHM7XG5cbiAgLyoqIFByb3ByaWVkYWRlIHF1ZSByZWNlYmUgYXMgbGVnZW5kYXMgZGVmaW5pZGFzIG5vIGBQb1RhYmxlU3VidGl0bGVDaXJjbGVDb21wb25lbnRgLiAqL1xuICBASW5wdXQoJ3Atc3VidGl0bGVzJykgc3VidGl0bGVzOiBBcnJheTxQb1RhYmxlU3VidGl0bGVDb2x1bW4+O1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgZWxlbWVudDogRWxlbWVudFJlZiwgcHVibGljIHJlbmRlcmVyOiBSZW5kZXJlcjIpIHt9XG5cbiAgbmdBZnRlclZpZXdJbml0KCkge1xuICAgIHRoaXMuaW5pdGlhbGl6ZVJlc2l6ZUxpc3RlbmVyKCk7XG4gICAgdGhpcy5kZWJvdW5jZVJlc2l6ZSgpO1xuICB9XG5cbiAgbmdEb0NoZWNrKCkge1xuICAgIGlmICghdGhpcy5pc1Zpc2libGUgJiYgdGhpcy5nZXRDb250YWluZXJTaXplKCkgPiAwKSB7XG4gICAgICB0aGlzLnRvZ2dsZVNob3dDb21wbGV0ZVN1YnRpdGxlKCk7XG4gICAgICB0aGlzLmlzVmlzaWJsZSA9IHRydWU7XG4gICAgfVxuICB9XG5cbiAgbmdPbkRlc3Ryb3koKSB7XG4gICAgdGhpcy5yZW1vdmVSZXNpemVMaXN0ZW5lcigpO1xuICB9XG5cbiAgcHJpdmF0ZSBkZWJvdW5jZVJlc2l6ZSgpIHtcbiAgICBjbGVhclRpbWVvdXQodGhpcy50aW1lb3V0UmVzaXplKTtcbiAgICB0aGlzLnRpbWVvdXRSZXNpemUgPSBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgIHRoaXMudG9nZ2xlU2hvd0NvbXBsZXRlU3VidGl0bGUoKTtcbiAgICB9KTtcbiAgfVxuXG4gIHByaXZhdGUgZ2V0Q29udGFpbmVyU2l6ZSgpIHtcbiAgICByZXR1cm4gdGhpcy5lbGVtZW50Lm5hdGl2ZUVsZW1lbnQucXVlcnlTZWxlY3RvcignLnBvLXRhYmxlLXN1YnRpdGxlLWZvb3Rlci1jb250YWluZXInKS5vZmZzZXRXaWR0aDtcbiAgfVxuXG4gIHByaXZhdGUgZ2V0SXRlbXNTaXplKCkge1xuICAgIGNvbnN0IGl0ZW1zID0gdGhpcy5lbGVtZW50Lm5hdGl2ZUVsZW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLnBvLXRhYmxlLXN1YnRpdGxlLWZvb3RlcicpO1xuXG4gICAgcmV0dXJuIEFycmF5LmZyb20oaXRlbXMpXG4gICAgICAubWFwKGl0ZW0gPT4gaXRlbVsnb2Zmc2V0V2lkdGgnXSlcbiAgICAgIC5yZWR1Y2UoKGEsIGIpID0+IGEgKyBiLCAxNik7XG4gIH1cblxuICBwcml2YXRlIGluaXRpYWxpemVSZXNpemVMaXN0ZW5lcigpIHtcbiAgICB0aGlzLnJlc2l6ZUxpc3RlbmVyID0gdGhpcy5yZW5kZXJlci5saXN0ZW4oJ3dpbmRvdycsICdyZXNpemUnLCAoZXZlbnQ6IE1vdXNlRXZlbnQpID0+IHtcbiAgICAgIHRoaXMuZGVib3VuY2VSZXNpemUoKTtcbiAgICB9KTtcbiAgfVxuXG4gIHByaXZhdGUgcmVtb3ZlUmVzaXplTGlzdGVuZXIoKSB7XG4gICAgdGhpcy5yZXNpemVMaXN0ZW5lcigpO1xuICB9XG5cbiAgcHJpdmF0ZSB0b2dnbGVTaG93Q29tcGxldGVTdWJ0aXRsZSgpIHtcbiAgICBjb25zdCBjb250YWluZXJTaXplID0gdGhpcy5nZXRDb250YWluZXJTaXplKCk7XG4gICAgY29uc3QgaXRlbXNTaXplID0gdGhpcy5nZXRJdGVtc1NpemUoKTtcblxuICAgIHRoaXMuc2hvd1N1YnRpdGxlID0gaXRlbXNTaXplID4gY29udGFpbmVyU2l6ZTtcbiAgfVxufVxuIl19