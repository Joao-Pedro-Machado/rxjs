import { EventEmitter, Input, Output, Directive } from '@angular/core';
import { convertToBoolean, uuid } from '../../../utils/util';
/**
 * @description
 *
 * O componente `po-tab` renderiza uma aba na qual envolve um conteúdo HTML.
 *
 * Com este componente é possível atribuir um rótulo para auxiliar na identificação do conteúdo, ativar para que o mesmo seja exibido,
 * desabilitar para impossibilitar o acesso, bem como ocultar para indisponibilizar a aba.
 *
 * > Para controlar a navegação entre diversas abas, utilizar o componente [`po-tabs`](/documentation/po-tabs).
 */
export class PoTabBaseComponent {
    constructor() {
        this._active = false;
        this._disabled = false;
        this._hide = false;
        // ID da aba
        this.id = uuid();
        /** Método disparado ao clicar na aba. */
        this.click = new EventEmitter();
    }
    /**
     * @optional
     *
     * @description
     *
     * Ativa a aba exibindo seu conteúdo.
     *
     * > Sugere-se utilizar na aba de conteúdo inicial.
     *
     * @default `false`
     */
    set active(active) {
        this._active = convertToBoolean(active);
        this.setDisplayOnActive();
    }
    get active() {
        return this._active;
    }
    /**
     * @optional
     *
     * @description
     *
     * Desabilita a aba.
     *
     * @default `false`
     */
    set disabled(disabled) {
        this._disabled = convertToBoolean(disabled);
    }
    get disabled() {
        return this._disabled;
    }
    /**
     * @optional
     *
     * @description
     *
     * Oculta a aba.
     *
     * @default `false`
     */
    set hide(hide) {
        this._hide = convertToBoolean(hide);
    }
    get hide() {
        return this._hide;
    }
}
PoTabBaseComponent.decorators = [
    { type: Directive }
];
PoTabBaseComponent.propDecorators = {
    active: [{ type: Input, args: ['p-active',] }],
    disabled: [{ type: Input, args: ['p-disabled',] }],
    hide: [{ type: Input, args: ['p-hide',] }],
    label: [{ type: Input, args: ['p-label',] }],
    click: [{ type: Output, args: ['p-click',] }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tdGFiLWJhc2UuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvdWkvc3JjL2xpYi9jb21wb25lbnRzL3BvLXRhYnMvcG8tdGFiL3BvLXRhYi1iYXNlLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRXZFLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxJQUFJLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUU3RDs7Ozs7Ozs7O0dBU0c7QUFFSCxNQUFNLE9BQWdCLGtCQUFrQjtJQUR4QztRQUVVLFlBQU8sR0FBYSxLQUFLLENBQUM7UUFDMUIsY0FBUyxHQUFhLEtBQUssQ0FBQztRQUM1QixVQUFLLEdBQWEsS0FBSyxDQUFDO1FBRWhDLFlBQVk7UUFDWixPQUFFLEdBQVksSUFBSSxFQUFFLENBQUM7UUEyRHJCLHlDQUF5QztRQUN0QixVQUFLLEdBQUcsSUFBSSxZQUFZLEVBQUUsQ0FBQztJQUdoRCxDQUFDO0lBN0RDOzs7Ozs7Ozs7O09BVUc7SUFDSCxJQUF1QixNQUFNLENBQUMsTUFBZTtRQUMzQyxJQUFJLENBQUMsT0FBTyxHQUFHLGdCQUFnQixDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQ3hDLElBQUksQ0FBQyxrQkFBa0IsRUFBRSxDQUFDO0lBQzVCLENBQUM7SUFFRCxJQUFJLE1BQU07UUFDUixPQUFPLElBQUksQ0FBQyxPQUFPLENBQUM7SUFDdEIsQ0FBQztJQUVEOzs7Ozs7OztPQVFHO0lBQ0gsSUFBeUIsUUFBUSxDQUFDLFFBQWlCO1FBQ2pELElBQUksQ0FBQyxTQUFTLEdBQUcsZ0JBQWdCLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDOUMsQ0FBQztJQUVELElBQUksUUFBUTtRQUNWLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQztJQUN4QixDQUFDO0lBRUQ7Ozs7Ozs7O09BUUc7SUFDSCxJQUFxQixJQUFJLENBQUMsSUFBYTtRQUNyQyxJQUFJLENBQUMsS0FBSyxHQUFHLGdCQUFnQixDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ3RDLENBQUM7SUFFRCxJQUFJLElBQUk7UUFDTixPQUFPLElBQUksQ0FBQyxLQUFLLENBQUM7SUFDcEIsQ0FBQzs7O1lBN0RGLFNBQVM7OztxQkFvQlAsS0FBSyxTQUFDLFVBQVU7dUJBa0JoQixLQUFLLFNBQUMsWUFBWTttQkFpQmxCLEtBQUssU0FBQyxRQUFRO29CQVNkLEtBQUssU0FBQyxTQUFTO29CQUdmLE1BQU0sU0FBQyxTQUFTIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRXZlbnRFbWl0dGVyLCBJbnB1dCwgT3V0cHV0LCBEaXJlY3RpdmUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgY29udmVydFRvQm9vbGVhbiwgdXVpZCB9IGZyb20gJy4uLy4uLy4uL3V0aWxzL3V0aWwnO1xuXG4vKipcbiAqIEBkZXNjcmlwdGlvblxuICpcbiAqIE8gY29tcG9uZW50ZSBgcG8tdGFiYCByZW5kZXJpemEgdW1hIGFiYSBuYSBxdWFsIGVudm9sdmUgdW0gY29udGXDumRvIEhUTUwuXG4gKlxuICogQ29tIGVzdGUgY29tcG9uZW50ZSDDqSBwb3Nzw612ZWwgYXRyaWJ1aXIgdW0gcsOzdHVsbyBwYXJhIGF1eGlsaWFyIG5hIGlkZW50aWZpY2HDp8OjbyBkbyBjb250ZcO6ZG8sIGF0aXZhciBwYXJhIHF1ZSBvIG1lc21vIHNlamEgZXhpYmlkbyxcbiAqIGRlc2FiaWxpdGFyIHBhcmEgaW1wb3NzaWJpbGl0YXIgbyBhY2Vzc28sIGJlbSBjb21vIG9jdWx0YXIgcGFyYSBpbmRpc3BvbmliaWxpemFyIGEgYWJhLlxuICpcbiAqID4gUGFyYSBjb250cm9sYXIgYSBuYXZlZ2HDp8OjbyBlbnRyZSBkaXZlcnNhcyBhYmFzLCB1dGlsaXphciBvIGNvbXBvbmVudGUgW2Bwby10YWJzYF0oL2RvY3VtZW50YXRpb24vcG8tdGFicykuXG4gKi9cbkBEaXJlY3RpdmUoKVxuZXhwb3J0IGFic3RyYWN0IGNsYXNzIFBvVGFiQmFzZUNvbXBvbmVudCB7XG4gIHByaXZhdGUgX2FjdGl2ZT86IGJvb2xlYW4gPSBmYWxzZTtcbiAgcHJpdmF0ZSBfZGlzYWJsZWQ/OiBib29sZWFuID0gZmFsc2U7XG4gIHByaXZhdGUgX2hpZGU/OiBib29sZWFuID0gZmFsc2U7XG5cbiAgLy8gSUQgZGEgYWJhXG4gIGlkPzogc3RyaW5nID0gdXVpZCgpO1xuXG4gIC8qKlxuICAgKiBAb3B0aW9uYWxcbiAgICpcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqXG4gICAqIEF0aXZhIGEgYWJhIGV4aWJpbmRvIHNldSBjb250ZcO6ZG8uXG4gICAqXG4gICAqID4gU3VnZXJlLXNlIHV0aWxpemFyIG5hIGFiYSBkZSBjb250ZcO6ZG8gaW5pY2lhbC5cbiAgICpcbiAgICogQGRlZmF1bHQgYGZhbHNlYFxuICAgKi9cbiAgQElucHV0KCdwLWFjdGl2ZScpIHNldCBhY3RpdmUoYWN0aXZlOiBib29sZWFuKSB7XG4gICAgdGhpcy5fYWN0aXZlID0gY29udmVydFRvQm9vbGVhbihhY3RpdmUpO1xuICAgIHRoaXMuc2V0RGlzcGxheU9uQWN0aXZlKCk7XG4gIH1cblxuICBnZXQgYWN0aXZlKCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiB0aGlzLl9hY3RpdmU7XG4gIH1cblxuICAvKipcbiAgICogQG9wdGlvbmFsXG4gICAqXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKlxuICAgKiBEZXNhYmlsaXRhIGEgYWJhLlxuICAgKlxuICAgKiBAZGVmYXVsdCBgZmFsc2VgXG4gICAqL1xuICBASW5wdXQoJ3AtZGlzYWJsZWQnKSBzZXQgZGlzYWJsZWQoZGlzYWJsZWQ6IGJvb2xlYW4pIHtcbiAgICB0aGlzLl9kaXNhYmxlZCA9IGNvbnZlcnRUb0Jvb2xlYW4oZGlzYWJsZWQpO1xuICB9XG5cbiAgZ2V0IGRpc2FibGVkKCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiB0aGlzLl9kaXNhYmxlZDtcbiAgfVxuXG4gIC8qKlxuICAgKiBAb3B0aW9uYWxcbiAgICpcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqXG4gICAqIE9jdWx0YSBhIGFiYS5cbiAgICpcbiAgICogQGRlZmF1bHQgYGZhbHNlYFxuICAgKi9cbiAgQElucHV0KCdwLWhpZGUnKSBzZXQgaGlkZShoaWRlOiBib29sZWFuKSB7XG4gICAgdGhpcy5faGlkZSA9IGNvbnZlcnRUb0Jvb2xlYW4oaGlkZSk7XG4gIH1cblxuICBnZXQgaGlkZSgpOiBib29sZWFuIHtcbiAgICByZXR1cm4gdGhpcy5faGlkZTtcbiAgfVxuXG4gIC8qKiBSw7N0dWxvIGRhIGFiYS4gKi9cbiAgQElucHV0KCdwLWxhYmVsJykgbGFiZWw6IHN0cmluZztcblxuICAvKiogTcOpdG9kbyBkaXNwYXJhZG8gYW8gY2xpY2FyIG5hIGFiYS4gKi9cbiAgQE91dHB1dCgncC1jbGljaycpIGNsaWNrID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuXG4gIHByb3RlY3RlZCBhYnN0cmFjdCBzZXREaXNwbGF5T25BY3RpdmUoKTtcbn1cbiJdfQ==