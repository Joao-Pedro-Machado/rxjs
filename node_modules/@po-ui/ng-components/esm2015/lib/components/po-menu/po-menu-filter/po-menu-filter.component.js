import { Component, ElementRef, EventEmitter, Input, Output, ViewChild } from '@angular/core';
import { PoLanguageService } from '../../../services/po-language/po-language.service';
export const poMenuFilterLiteralsDefault = {
    en: { search: 'Search' },
    es: { search: 'Buscar' },
    pt: { search: 'Pesquisar' },
    ru: { search: 'Поиск' }
};
/**
 * @docsPrivate
 *
 * @description
 *
 * Componente que apresenta o campo de pesquisa no po-menu.
 */
export class PoMenuFilterComponent {
    constructor(languageService) {
        this.languageService = languageService;
        // Variável necessária para o po-clean identificar que deve ser criado.
        this.clean = true;
        this.literals = Object.assign(Object.assign({}, poMenuFilterLiteralsDefault[this.languageService.getLanguageDefault()]), poMenuFilterLiteralsDefault[this.languageService.getShortLanguage()]);
        this.filter = new EventEmitter();
    }
    filterItems(search) {
        this.filter.emit(search);
    }
}
PoMenuFilterComponent.decorators = [
    { type: Component, args: [{
                selector: 'po-menu-filter',
                template: "<div class=\"po-menu-filter-container\">\n  <input\n    #inputFilter\n    type=\"text\"\n    class=\"po-menu-filter\"\n    [placeholder]=\"literals.search\"\n    (keyup)=\"filterItems(inputFilter.value)\"\n  />\n\n  <div class=\"po-menu-filter-search-icon-container\">\n    <span *ngIf=\"!loading\" class=\"po-icon po-menu-filter-icon po-icon-search\"></span>\n    <po-loading-icon *ngIf=\"loading\"></po-loading-icon>\n  </div>\n  <div class=\"po-menu-filter-close-icon-container\">\n    <po-clean [p-element-ref]=\"inputFilterElement\" (p-change-event)=\"filterItems(inputFilter.value)\"></po-clean>\n  </div>\n</div>\n"
            },] }
];
PoMenuFilterComponent.ctorParameters = () => [
    { type: PoLanguageService }
];
PoMenuFilterComponent.propDecorators = {
    loading: [{ type: Input, args: ['p-loading',] }],
    inputFilterElement: [{ type: ViewChild, args: ['inputFilter', { read: ElementRef, static: true },] }],
    filter: [{ type: Output, args: ['p-filter',] }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG8tbWVudS1maWx0ZXIuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvdWkvc3JjL2xpYi9jb21wb25lbnRzL3BvLW1lbnUvcG8tbWVudS1maWx0ZXIvcG8tbWVudS1maWx0ZXIuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsVUFBVSxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUM5RixPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxtREFBbUQsQ0FBQztBQUd0RixNQUFNLENBQUMsTUFBTSwyQkFBMkIsR0FBRztJQUN6QyxFQUFFLEVBQXdCLEVBQUUsTUFBTSxFQUFFLFFBQVEsRUFBRTtJQUM5QyxFQUFFLEVBQXdCLEVBQUUsTUFBTSxFQUFFLFFBQVEsRUFBRTtJQUM5QyxFQUFFLEVBQXdCLEVBQUUsTUFBTSxFQUFFLFdBQVcsRUFBRTtJQUNqRCxFQUFFLEVBQXdCLEVBQUUsTUFBTSxFQUFFLE9BQU8sRUFBRTtDQUM5QyxDQUFDO0FBRUY7Ozs7OztHQU1HO0FBS0gsTUFBTSxPQUFPLHFCQUFxQjtJQWNoQyxZQUFtQixlQUFrQztRQUFsQyxvQkFBZSxHQUFmLGVBQWUsQ0FBbUI7UUFickQsdUVBQXVFO1FBQzlELFVBQUssR0FBRyxJQUFJLENBQUM7UUFDZixhQUFRLG1DQUNWLDJCQUEyQixDQUFDLElBQUksQ0FBQyxlQUFlLENBQUMsa0JBQWtCLEVBQUUsQ0FBQyxHQUN0RSwyQkFBMkIsQ0FBQyxJQUFJLENBQUMsZUFBZSxDQUFDLGdCQUFnQixFQUFFLENBQUMsRUFDdkU7UUFPa0IsV0FBTSxHQUFHLElBQUksWUFBWSxFQUFFLENBQUM7SUFDUSxDQUFDO0lBQ3pELFdBQVcsQ0FBQyxNQUFjO1FBQ3hCLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQzNCLENBQUM7OztZQXJCRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLGdCQUFnQjtnQkFDMUIseW5CQUE4QzthQUMvQzs7O1lBcEJRLGlCQUFpQjs7O3NCQTZCdkIsS0FBSyxTQUFDLFdBQVc7aUNBR2pCLFNBQVMsU0FBQyxhQUFhLEVBQUUsRUFBRSxJQUFJLEVBQUUsVUFBVSxFQUFFLE1BQU0sRUFBRSxJQUFJLEVBQUU7cUJBRTNELE1BQU0sU0FBQyxVQUFVIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBFbGVtZW50UmVmLCBFdmVudEVtaXR0ZXIsIElucHV0LCBPdXRwdXQsIFZpZXdDaGlsZCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgUG9MYW5ndWFnZVNlcnZpY2UgfSBmcm9tICcuLi8uLi8uLi9zZXJ2aWNlcy9wby1sYW5ndWFnZS9wby1sYW5ndWFnZS5zZXJ2aWNlJztcbmltcG9ydCB7IFBvTWVudUZpbHRlckxpdGVyYWxzIH0gZnJvbSAnLi9wby1tZW51LWZpbHRlci1saXRlcmFscy5pbnRlcmZhY2UnO1xuXG5leHBvcnQgY29uc3QgcG9NZW51RmlsdGVyTGl0ZXJhbHNEZWZhdWx0ID0ge1xuICBlbjogPFBvTWVudUZpbHRlckxpdGVyYWxzPnsgc2VhcmNoOiAnU2VhcmNoJyB9LFxuICBlczogPFBvTWVudUZpbHRlckxpdGVyYWxzPnsgc2VhcmNoOiAnQnVzY2FyJyB9LFxuICBwdDogPFBvTWVudUZpbHRlckxpdGVyYWxzPnsgc2VhcmNoOiAnUGVzcXVpc2FyJyB9LFxuICBydTogPFBvTWVudUZpbHRlckxpdGVyYWxzPnsgc2VhcmNoOiAn0J/QvtC40YHQuicgfVxufTtcblxuLyoqXG4gKiBAZG9jc1ByaXZhdGVcbiAqXG4gKiBAZGVzY3JpcHRpb25cbiAqXG4gKiBDb21wb25lbnRlIHF1ZSBhcHJlc2VudGEgbyBjYW1wbyBkZSBwZXNxdWlzYSBubyBwby1tZW51LlxuICovXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdwby1tZW51LWZpbHRlcicsXG4gIHRlbXBsYXRlVXJsOiAnLi9wby1tZW51LWZpbHRlci5jb21wb25lbnQuaHRtbCdcbn0pXG5leHBvcnQgY2xhc3MgUG9NZW51RmlsdGVyQ29tcG9uZW50IHtcbiAgLy8gVmFyacOhdmVsIG5lY2Vzc8OhcmlhIHBhcmEgbyBwby1jbGVhbiBpZGVudGlmaWNhciBxdWUgZGV2ZSBzZXIgY3JpYWRvLlxuICByZWFkb25seSBjbGVhbiA9IHRydWU7XG4gIHB1YmxpYyBsaXRlcmFscyA9IHtcbiAgICAuLi5wb01lbnVGaWx0ZXJMaXRlcmFsc0RlZmF1bHRbdGhpcy5sYW5ndWFnZVNlcnZpY2UuZ2V0TGFuZ3VhZ2VEZWZhdWx0KCldLFxuICAgIC4uLnBvTWVudUZpbHRlckxpdGVyYWxzRGVmYXVsdFt0aGlzLmxhbmd1YWdlU2VydmljZS5nZXRTaG9ydExhbmd1YWdlKCldXG4gIH07XG5cbiAgQElucHV0KCdwLWxvYWRpbmcnKSBsb2FkaW5nOiBib29sZWFuO1xuXG4gIC8vIHV0aWxpemFkbyBwYXJhIHJlcGFzc2FyIGFvIHBvLWNsZWFuXG4gIEBWaWV3Q2hpbGQoJ2lucHV0RmlsdGVyJywgeyByZWFkOiBFbGVtZW50UmVmLCBzdGF0aWM6IHRydWUgfSkgaW5wdXRGaWx0ZXJFbGVtZW50OiBFbGVtZW50UmVmO1xuXG4gIEBPdXRwdXQoJ3AtZmlsdGVyJykgZmlsdGVyID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICBjb25zdHJ1Y3RvcihwdWJsaWMgbGFuZ3VhZ2VTZXJ2aWNlOiBQb0xhbmd1YWdlU2VydmljZSkge31cbiAgZmlsdGVySXRlbXMoc2VhcmNoOiBzdHJpbmcpIHtcbiAgICB0aGlzLmZpbHRlci5lbWl0KHNlYXJjaCk7XG4gIH1cbn1cbiJdfQ==